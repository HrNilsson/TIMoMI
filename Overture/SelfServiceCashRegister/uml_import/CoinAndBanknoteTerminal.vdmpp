class CoinAndBanknoteTerminal

instance variables
	balance : nat;

operations
	public CoinAndBanknoteTerminal: () ==> CoinAndBanknoteTerminal
		CoinAndBanknoteTerminal() ==
			balance :=0;

	public PutInMoney: nat1 ==> ()
		PutInMoney(amount) ==
			balance := balance + amount;

	public RetreiveMoney: () ==> ()
		RetreiveMoney() ==
		(
			IO`print("Giving back money. Amount: ");
			IO`print(balance);
			IO`print("\n");
			
			balance := 0;
		);
		
		
	public Pay: nat1 ==> bool * real
		Pay(sum) ==
			let enough = sum < balance,
					remaining = balance - sum
					 in
				if enough then
				(
					balance := balance - sum;
					RetreiveMoney();
					return mk_(true, remaining)
				)
				else
					return mk_(false, remaining)
					

end CoinAndBanknoteTerminal
